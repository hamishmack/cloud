# A Minikube deployment
# 
# Has configs which are inappropriate for production but which make
# development a lot easier

kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: sibyl
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sibyl
    spec:
      containers:
        - name: sibyl-server
          image: stencila/sibyl-server
          # Use  `IfNotPresent` so that Kubernetes does not pull each time and
          # instead uses the latest build done outside of the container
          # (see README)
          imagePullPolicy: IfNotPresent 
          env:
            - name: DOCKER_HOST
              value: tcp://127.0.0.1:2375
            - name: SIBYL_CLUSTER
              value: 'true'
            - name: SIBYL_REGISTRY
              value: localhost:5000
          ports:
            - containerPort: 3000

        # Use Docker-in-Docker (dind) to build Docker images
        # An alternative is to use the Docker daemeon that is actually present on
        # the node. But doing so has security implications. This isn't perfec
        # but it seems to be better.
        # See the discussion at https://github.com/kubernetes/kubernetes/issues/1806
        - name: sibyl-docker
          image: docker:dind
          securityContext:
            privileged: true
          ports:
            - containerPort: 2375

        # Use a Docker Registry in the same pod because otherwise we need
        # to configure TLS 
        - name: sibyl-registry
          image: registry:2
          ports:
            - containerPort: 5000

---

# Expose the Sibyl server

kind: Service
apiVersion: v1
metadata:
  name: sibyl-server
spec:
  type: NodePort
  selector:
    app: sibyl
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000


---

# Expose the Docker-in-Docker container so that we
# can do a `docker build ...` inside of it from 
# outside of the cluster (see README)

kind: Service
apiVersion: v1
metadata:
  name: sibyl-docker
spec:
  type: NodePort
  selector:
    app: sibyl
  ports:
    - protocol: TCP
      port: 2375
      targetPort: 2375

---

# Expose the Docker registry outside. This is to allow kubectl to pull
# images built by sibyl
# Need to run:
# kubectl port-forward $(kubectl get po -n | grep sibyl-registry | awk '{print $1;}') 5000:5000

kind: Service
apiVersion: v1
metadata:
  name: sibyl-registry
  labels:
    app: sibyl
spec:
  type: NodePort
  selector:
    app: sibyl
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

